
#!/usr/bin/env  python
import importlib.util
import sys
import os
import sys
import pip
import subprocess

#Installing the required modules for the script to run
package_list = ['requests', 'colorama']
for item in package_list:
    if item in sys.modules:
        print(f"{item!r} already in sys.modules")
    elif (spec := importlib.util.find_spec(item)) is not None:
        module = importlib.util.module_from_spec(spec)
        sys.modules[item] = module
        spec.loader.exec_module(module)
    else:
        def install(package):
            subprocess.check_call([sys.executable, "-m", "pip", "install", package])
        for item in package_list:
            install(item)


from urllib.request import urlopen
from colorama import Fore, Back, Style
from urllib.error import *


#Web Live Status Check
n = len(sys.argv)
if n ==1:
    print(Fore.RED+'Input file not Provided')
    print(Fore.GREEN+'Example: python webStatus.py doaminnamefile.txt')
elif n !=2:
    print('Example: python webStatus.py doaminnamefile.txt')
else:
    #Creating a directory to save files
    current_directory = os.getcwd()
    final_directory = os.path.join(current_directory, r'output')
    if not os.path.exists(final_directory):
       os.makedirs(final_directory)
    #Creating the failed.txt and success.txt files to save the respective output
    failedFile = open(current_directory+'/output/failed.txt', 'w')
    successFile = open(current_directory+'/output/success.txt', 'w')
    with open(sys.argv[1], 'r') as i:         #Reading the file that contains the domain list
        lines = i.readlines()
        for line in lines:
            try:
                html = urlopen(line)    #Request the check accessibility
            except HTTPError:
                print(Fore.RED +'Failed --',line)
                failedFile.write(line)
            except URLError:
                print(Fore.RED + 'Failed --',line)
                failedFile.write(line)
            else:
                print(Fore.GREEN +"Success --",line)
                successFile.write(line)
    successFile.close()
    failedFile.close()
print(Fore.GREEN+'[+] Check the Output directory for the output files')
